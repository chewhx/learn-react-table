[{"/Users/chewhx/github/learn-react-table/src/index.js":"1","/Users/chewhx/github/learn-react-table/src/reportWebVitals.js":"2","/Users/chewhx/github/learn-react-table/src/App.js":"3","/Users/chewhx/github/learn-react-table/src/components/assets/columns.js":"4","/Users/chewhx/github/learn-react-table/src/components/assets/GlobalFilter.js":"5","/Users/chewhx/github/learn-react-table/src/components/01-Table.jsx":"6","/Users/chewhx/github/learn-react-table/src/components/02-Sorting.jsx":"7","/Users/chewhx/github/learn-react-table/src/components/03-GlobalFilter.jsx":"8","/Users/chewhx/github/learn-react-table/src/components/assets/ColumnFilter.js":"9","/Users/chewhx/github/learn-react-table/src/components/04-ColumnFiltering.jsx":"10","/Users/chewhx/github/learn-react-table/src/components/assets/PayeeFilter.js":"11","/Users/chewhx/github/learn-react-table/src/components/05-Pagination.jsx":"12","/Users/chewhx/github/learn-react-table/src/components/06-RowSelection.jsx":"13","/Users/chewhx/github/learn-react-table/src/components/assets/Checkbox.js":"14","/Users/chewhx/github/learn-react-table/src/components/07-ColumnOrder.jsx":"15"},{"size":500,"mtime":1611787441451,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1611787441452,"results":"18","hashOfConfig":"17"},{"size":523,"mtime":1611840352461,"results":"19","hashOfConfig":"17"},{"size":719,"mtime":1611838880884,"results":"20","hashOfConfig":"17"},{"size":535,"mtime":1611838880883,"results":"21","hashOfConfig":"17"},{"size":1494,"mtime":1611838880881,"results":"22","hashOfConfig":"17"},{"size":1664,"mtime":1611838880881,"results":"23","hashOfConfig":"17"},{"size":1912,"mtime":1611838880881,"results":"24","hashOfConfig":"17"},{"size":310,"mtime":1611838880882,"results":"25","hashOfConfig":"17"},{"size":2445,"mtime":1611838880882,"results":"26","hashOfConfig":"17"},{"size":286,"mtime":1611838880883,"results":"27","hashOfConfig":"17"},{"size":4120,"mtime":1611838880882,"results":"28","hashOfConfig":"17"},{"size":5229,"mtime":1611840166113,"results":"29","hashOfConfig":"17"},{"size":426,"mtime":1611839299471,"results":"30","hashOfConfig":"17"},{"size":5465,"mtime":1611841661705,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1xcqg9w",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"41"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"41"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"41"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/chewhx/github/learn-react-table/src/index.js",[],"/Users/chewhx/github/learn-react-table/src/reportWebVitals.js",[],"/Users/chewhx/github/learn-react-table/src/App.js",["67","68","69","70","71","72","73"],"/Users/chewhx/github/learn-react-table/src/components/assets/columns.js",["74"],"import { format } from \"date-fns\";\nimport { ColumnFilter } from \"./ColumnFilter\";\n\nconst format$ = (number) =>\n  new Intl.NumberFormat(\"en-SG\", { style: \"currency\", currency: \"SGD\" }).format(\n    number\n  );\n\nexport const COLUMNS = [\n  {\n    Header: \"Date\",\n    accessor: \"date\",\n    Cell: ({ value }) => {\n      return format(new Date(value), \"yyyy-MM-dd\");\n    },\n  },\n  {\n    Header: \"Code\",\n    accessor: \"code\",\n  },\n  {\n    Header: \"Payee\",\n    accessor: \"payee\",\n\n  },\n  {\n    Header: \"Withdrawal\",\n    accessor: \"debit\",\n    Cell: ({ value }) => {\n      return format$(value);\n    },\n  },\n  {\n    Header: \"Deposit\",\n    accessor: \"credit\",\n    Cell: ({ value }) => {\n      return format$(value);\n    },\n  },\n];\n",["75","76"],"/Users/chewhx/github/learn-react-table/src/components/assets/GlobalFilter.js",[],"/Users/chewhx/github/learn-react-table/src/components/01-Table.jsx",[],"/Users/chewhx/github/learn-react-table/src/components/02-Sorting.jsx",[],"/Users/chewhx/github/learn-react-table/src/components/03-GlobalFilter.jsx",[],"/Users/chewhx/github/learn-react-table/src/components/assets/ColumnFilter.js",[],"/Users/chewhx/github/learn-react-table/src/components/04-ColumnFiltering.jsx",["77"],"import React, { useMemo } from \"react\";\nimport { useTable, useSortBy, useGlobalFilter, useFilters } from \"react-table\";\nimport dataJSON from \"./assets/data.json\";\nimport { COLUMNS } from \"./assets/columns\";\nimport { GlobalFilter } from \"./assets/GlobalFilter\";\nimport { ColumnFilter } from \"./assets/ColumnFilter\";\nimport { PayeeFilter } from \"./assets/PayeeFilter\";\n\nexport default function ColumnFiltering() {\n  // raw data for the table, memoised to prevent re-rendering\n  const data = useMemo(() => dataJSON, []);\n\n  // setting the Schema info for useTable hook, memoised to prevent re-rendering\n  const columns = useMemo(() => COLUMNS, []);\n\n  // define default column for \"Filter: ColumnFilter\"\n  const defaultColumn = useMemo(() => {\n    return {Filter: ColumnFilter}\n  }, []);\n\n  // apply useTable hook\n  const tableInstance = useTable(\n    { columns, data, defaultColumn },\n    useFilters,\n    useGlobalFilter,\n    useSortBy\n  );\n\n  // destructure tableInstance\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    state,\n    setGlobalFilter,\n  } = tableInstance;\n\n  const { globalFilter } = state;\n\n  return (\n    <>\n      <GlobalFilter filter={globalFilter} setFilter={setGlobalFilter} />\n      <table className=\"table table-striped table-hover\" {...getTableProps()}>\n        <thead className=\"table-dark\">\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                  {column.render(\"Header\")}\n                  <div>{column.canFilter ? column.render(\"Filter\") : null}</div>\n                  <span>\n                    {column.isSorted\n                      ? column.isSortedDesc\n                        ? \" ðŸ”¼\"\n                        : \" ðŸ”½\"\n                      : \"\"}\n                  </span>\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {rows.map((row) => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map((cell) => {\n                  return <td {...cell.getCellProps}>{cell.render(\"Cell\")}</td>;\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </>\n  );\n}\n","/Users/chewhx/github/learn-react-table/src/components/assets/PayeeFilter.js",[],"/Users/chewhx/github/learn-react-table/src/components/05-Pagination.jsx",["78"],"import React, { useMemo } from \"react\";\nimport {\n  useTable,\n  useSortBy,\n  useGlobalFilter,\n  useFilters,\n  usePagination,\n} from \"react-table\";\nimport dataJSON from \"./assets/data.json\";\nimport { COLUMNS } from \"./assets/columns\";\nimport { GlobalFilter } from \"./assets/GlobalFilter\";\nimport { ColumnFilter } from \"./assets/ColumnFilter\";\nimport { PayeeFilter } from \"./assets/PayeeFilter\";\n\nexport default function Pagination() {\n  // raw data for the table, memoised to prevent re-rendering\n  const data = useMemo(() => dataJSON, []);\n\n  // setting the Schema info for useTable hook, memoised to prevent re-rendering\n  const columns = useMemo(() => COLUMNS, []);\n\n  // define default column for \"Filter: ColumnFilter\"\n  const defaultColumn = useMemo(() => {\n    return { Filter: ColumnFilter };\n  }, []);\n\n  // apply useTable hook\n  const tableInstance = useTable(\n    {\n      columns,\n      data,\n      defaultColumn,\n      initialState: { pageIndex: 2 },\n    },\n    useFilters,\n    useGlobalFilter,\n    useSortBy,\n    usePagination\n  );\n\n  // destructure tableInstance\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    page,\n    nextPage,\n    previousPage,\n    canNextPage,\n    canPreviousPage,\n    prepareRow,\n    pageOptions,\n    gotoPage,\n    pageCount,\n    state,\n    setGlobalFilter,\n    setPageSize,\n  } = tableInstance;\n\n  const { globalFilter, pageIndex, pageSize } = state;\n\n  const handlePageInput = (e) => {\n    const value = e.target.value;\n    const input = value ? Number(value) - 1 : 0;\n    return input;\n  };\n\n  return (\n    <>\n      <GlobalFilter filter={globalFilter} setFilter={setGlobalFilter} />\n      <table className=\"table table-striped table-hover\" {...getTableProps()}>\n        <thead className=\"table-dark\">\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                  {column.render(\"Header\")}\n                  <div>{column.canFilter ? column.render(\"Filter\") : null}</div>\n                  <span>\n                    {column.isSorted\n                      ? column.isSortedDesc\n                        ? \" ðŸ”¼\"\n                        : \" ðŸ”½\"\n                      : \"\"}\n                  </span>\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {page.map((row) => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map((cell) => {\n                  return <td {...cell.getCellProps}>{cell.render(\"Cell\")}</td>;\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n      <div>\n        Page {pageIndex + 1} of {pageOptions.length}\n      </div>\n      <div>\n        Go to page:{\" \"}\n        <input\n          type=\"text\"\n          defaultValue={pageIndex + 1}\n          onChange={(e) => gotoPage(handlePageInput(e))}\n          style={{ width: \"30px\" }}\n        />\n      </div>\n      <div>\n        <select options={pageSize} onChange={(e) => setPageSize(Number(e.target.value))}>\n          {\n            [10, 25, 50].map(pageSize => (\n              <option key={pageSize} value={pageSize}>\n                Show {pageSize}\n              </option>\n            ))\n          }\n        </select>\n      </div>\n      <button\n        className=\"btn btn-dark\"\n        onClick={() => gotoPage(0)}\n        disabled={!canPreviousPage}\n      >\n        First\n      </button>\n      <button\n        className=\"btn btn-primary\"\n        onClick={() => previousPage()}\n        disabled={!canPreviousPage}\n      >\n        Previous\n      </button>\n      <button\n        className=\"btn btn-primary\"\n        onClick={() => nextPage()}\n        disabled={!canNextPage}\n      >\n        Next\n      </button>\n      <button\n        className=\"btn btn-dark\"\n        onClick={() => gotoPage(pageCount - 1)}\n        disabled={!canNextPage}\n      >\n        Last\n      </button>\n    </>\n  );\n}\n","/Users/chewhx/github/learn-react-table/src/components/06-RowSelection.jsx",["79"],"import React, { useMemo } from \"react\";\nimport {\n  useTable,\n  useSortBy,\n  useGlobalFilter,\n  useFilters,\n  usePagination,\n  useRowSelect,\n} from \"react-table\";\nimport dataJSON from \"./assets/data.json\";\nimport { COLUMNS } from \"./assets/columns\";\nimport { GlobalFilter } from \"./assets/GlobalFilter\";\nimport { ColumnFilter } from \"./assets/ColumnFilter\";\nimport { PayeeFilter } from \"./assets/PayeeFilter\";\nimport { Checkbox } from \"./assets/Checkbox\";\n\nexport default function RowSelection() {\n  // raw data for the table, memoised to prevent re-rendering\n  const data = useMemo(() => dataJSON, []);\n\n  // setting the Schema info for useTable hook, memoised to prevent re-rendering\n  const columns = useMemo(() => COLUMNS, []);\n\n  // define default column for \"Filter: ColumnFilter\"\n  const defaultColumn = useMemo(() => {\n    return { Filter: ColumnFilter };\n  }, []);\n\n  // apply useTable hook\n  const tableInstance = useTable(\n    {\n      columns,\n      data,\n      defaultColumn,\n      initialState: { pageIndex: 2 },\n    },\n    useFilters,\n    useGlobalFilter,\n    useSortBy,\n    usePagination,\n    useRowSelect,\n    //4. Add visible checkbox component into the rows\n    (hooks) => {\n      hooks.visibleColumns.push((columns) => {\n        return [\n          {\n            date: \"selection\",\n            Header: ({ getToggleAllRowsSelectedProps }) => (\n              <Checkbox {...getToggleAllRowsSelectedProps()} />\n            ),\n            Cell: ({ row }) => (\n              <Checkbox {...row.getToggleRowSelectedProps()} />\n            ),\n          },\n          ...columns,\n        ];\n      });\n    }\n  );\n\n  // destructure tableInstance\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    page,\n    nextPage,\n    previousPage,\n    canNextPage,\n    canPreviousPage,\n    prepareRow,\n    pageOptions,\n    gotoPage,\n    pageCount,\n    state,\n    setGlobalFilter,\n    setPageSize,\n    selectedFlatRows,\n  } = tableInstance;\n\n  const { globalFilter, pageIndex, pageSize } = state;\n\n  const handlePageInput = (e) => {\n    const value = e.target.value;\n    const input = value ? Number(value) - 1 : 0;\n    return input;\n  };\n\n  return (\n    <>\n      <GlobalFilter filter={globalFilter} setFilter={setGlobalFilter} />\n      <table className=\"table table-striped table-hover\" {...getTableProps()}>\n        <thead className=\"table-dark\">\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                  {column.render(\"Header\")}\n                  <div>{column.canFilter ? column.render(\"Filter\") : null}</div>\n                  <span>\n                    {column.isSorted\n                      ? column.isSortedDesc\n                        ? \" ðŸ”¼\"\n                        : \" ðŸ”½\"\n                      : \"\"}\n                  </span>\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {page.map((row) => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map((cell) => {\n                  return <td {...cell.getCellProps}>{cell.render(\"Cell\")}</td>;\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n      <div>\n        Page {pageIndex + 1} of {pageOptions.length}\n      </div>\n      <div>\n        Go to page:{\" \"}\n        <input\n          type=\"text\"\n          defaultValue={pageIndex + 1}\n          onChange={(e) => gotoPage(handlePageInput(e))}\n          style={{ width: \"30px\" }}\n        />\n      </div>\n      <div>\n        <select\n          options={pageSize}\n          onChange={(e) => setPageSize(Number(e.target.value))}\n        >\n          {[10, 25, 50].map((pageSize) => (\n            <option key={pageSize} value={pageSize}>\n              Show {pageSize}\n            </option>\n          ))}\n        </select>\n      </div>\n      <button\n        className=\"btn btn-dark\"\n        onClick={() => gotoPage(0)}\n        disabled={!canPreviousPage}\n      >\n        First\n      </button>\n      <button\n        className=\"btn btn-primary\"\n        onClick={() => previousPage()}\n        disabled={!canPreviousPage}\n      >\n        Previous\n      </button>\n      <button\n        className=\"btn btn-primary\"\n        onClick={() => nextPage()}\n        disabled={!canNextPage}\n      >\n        Next\n      </button>\n      <button\n        className=\"btn btn-dark\"\n        onClick={() => gotoPage(pageCount - 1)}\n        disabled={!canNextPage}\n      >\n        Last\n      </button>\n      <pre>\n        <code>\n          {JSON.stringify(\n            {\n              selectedFlatRows: selectedFlatRows.map((row) => row.original),\n            },\n            null,\n            2\n          )}\n        </code>\n      </pre>\n    </>\n  );\n}\n\n//1. create Checkbox component, copy code from React Table examples\n//2. import 'useRowSelect' and pass into useTable hook\n//3. destructure 'selectedFlatRows'\n//4. Add visible checkbox component into the rows\n//5. Stringify the seleciton to see or prepare for sending to server\n","/Users/chewhx/github/learn-react-table/src/components/assets/Checkbox.js",[],"/Users/chewhx/github/learn-react-table/src/components/07-ColumnOrder.jsx",["80"],{"ruleId":"81","severity":1,"message":"82","line":1,"column":8,"nodeType":"83","messageId":"84","endLine":1,"endColumn":12},{"ruleId":"81","severity":1,"message":"85","line":3,"column":8,"nodeType":"83","messageId":"84","endLine":3,"endColumn":13},{"ruleId":"81","severity":1,"message":"86","line":4,"column":8,"nodeType":"83","messageId":"84","endLine":4,"endColumn":15},{"ruleId":"81","severity":1,"message":"87","line":5,"column":8,"nodeType":"83","messageId":"84","endLine":5,"endColumn":20},{"ruleId":"81","severity":1,"message":"88","line":6,"column":8,"nodeType":"83","messageId":"84","endLine":6,"endColumn":20},{"ruleId":"81","severity":1,"message":"89","line":7,"column":8,"nodeType":"83","messageId":"84","endLine":7,"endColumn":18},{"ruleId":"81","severity":1,"message":"90","line":8,"column":8,"nodeType":"83","messageId":"84","endLine":8,"endColumn":20},{"ruleId":"81","severity":1,"message":"88","line":2,"column":10,"nodeType":"83","messageId":"84","endLine":2,"endColumn":22},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"81","severity":1,"message":"95","line":7,"column":10,"nodeType":"83","messageId":"84","endLine":7,"endColumn":21},{"ruleId":"81","severity":1,"message":"95","line":13,"column":10,"nodeType":"83","messageId":"84","endLine":13,"endColumn":21},{"ruleId":"81","severity":1,"message":"95","line":14,"column":10,"nodeType":"83","messageId":"84","endLine":14,"endColumn":21},{"ruleId":"81","severity":1,"message":"95","line":15,"column":10,"nodeType":"83","messageId":"84","endLine":15,"endColumn":21},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Table' is defined but never used.","'Sorting' is defined but never used.","'GlobalFilter' is defined but never used.","'ColumnFilter' is defined but never used.","'Pagination' is defined but never used.","'RowSelection' is defined but never used.","no-native-reassign",["96"],"no-negated-in-lhs",["97"],"'PayeeFilter' is defined but never used.","no-global-assign","no-unsafe-negation"]